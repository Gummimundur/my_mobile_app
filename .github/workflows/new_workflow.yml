name: Improved
on: push
env:
  NUNIT_CONSOLE_VERSION: 3.12.0
  NUGET_EXE: /Library/Frameworks/Mono.framework/Versions/Current/lib/mono/nuget/nuget.exe
  NUNIT_CONSOLE: /Users/runner/work/my_mobile_app/my_mobile_app/NUnit.ConsoleRunner.3.12.0/tools/nunit3-console.exe
jobs: 
  Android:
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2  
        with:
            ref: improved
            
            
      - name: Cache ./nuget/packages
        uses: actions/cache@v2
        with:
          path: | 
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/**/*.csproj') }}-${{ hashFiles('**/**/**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget
            
      - name: Nuget restore
        run: mono ${{ env.NUGET_EXE }} restore App1/App1.sln
        
      - name: Cache NUnit.Console
        id: nunit-console
        uses: actions/cache@v2
        with:
          path: ./NUnit.ConsoleRunner.${{ env.NUNIT_CONSOLE_VERSION }}
          key: nunit-console-${{ env.NUNIT_CONSOLE_VERSION }}
          
      - name: Download NUnit-Console
        if: steps.nunit-console.outputs.cache-hit != 'true'
        run: mono ${{ env.NUGET_EXE }} install NUnit.Console -Version ${{ env.NUNIT_CONSOLE_VERSION }}
        
      - name: Build .Apk
        run: mono '/Applications/Visual Studio.app/Contents/Resources/lib/monodevelop/bin/MSBuild/Current/bin/msbuild.dll' App1/App1/App1.Android/App1.Android.csproj -target:SignAndroidPackage /p:Configuration=Release /verbosity:normal
      
      - name: Check for apk
        run: ls App1/App1/App1.Android/bin/Release
        
      - name: Cache apk
        id: signed-apk
        uses: actions/cache@v2
        with:
          path: App1/App1/App1.Android/bin/Release
          key: ${{ github.GITHUB_RUN_ID }}-apk
      
      - name: Build UItest
        run: msbuild App1/UItest/UItest.csproj /p:Configuration=Release
        
      - name: Cache Android sdk
        id: sdk-android
        uses: actions/cache@v2
        with:
          path: /Users/runner/android-sdk
          key: ${{ runner.os }}-android-sdk
          restore-keys: |
            ${{ runner.os }}-android-sdk
            
            
      - name: Set android env variables
        if: steps.sdk-android.outputs.cache-hit == 'true'
        run: |
          echo "ANDROID_HOME=/Users/runner/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=Users/runner/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_HOME=Users/runner/android-sdk/sdk_home" >> $GITHUB_ENV

      - name: Install android sdk 
        if: steps.sdk-android.outputs.cache-hit != 'true'
        uses: malinskiy/action-android/install-sdk@release/0.1.1
       
      - name: Install android tools
        if: steps.sdk-android.outputs.cache-hit != 'true'
        run: |
          sdkmanager "platform-tools"
          sdkmanager "build-tools;30.0.2"
        
      - name: Android UItest
        uses: malinskiy/action-android/emulator-run-cmd@release/0.1.1
        with:
            cmd: mono ${{ env.NUNIT_CONSOLE }} App1/UItest/bin/Release/UItest.dll --where "test =~ Android"
            api: 29
            tag: default
            abi: x86   
            verbose: false
      
      - uses: actions/upload-artifact@v2.2.1
        with:
          name: Android-screenshots
          path: App1/UItest/bin/Release/screenshots

  Deploy-android:
    runs-on: ubuntu-latest
    needs: Android
    steps:
    - name: Checkout
      uses: actions/checkout@v2  
      with:
          ref: improved      
          
    - name: Cache apk
      id: signed-apk
      uses: actions/cache@v2
      with:
        path: App1/App1/App1.Android/bin/Release
        key: ${{ github.GITHUB_RUN_ID }}-apk
        
    - name: Check after cache
      run: ls App1/App1/App1.Android/bin/Release
      
    - uses: actions/checkout@master
    - name: Send file README.md to discord channel
      uses: sinshutu/upload-to-discord@master
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      with:
        args: App1/App1/App1.Android/bin/Release/com.companyname.app1-Signed.apk
        
  iOS:
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2  
        with:
            ref: improved
        
      - name: Cache ./nuget/packages
        uses: actions/cache@v2
        with:
          path: | 
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/**/*.csproj') }}-${{ hashFiles('**/**/**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-
            
      - name: Nuget restore
        run: mono ${{ env.NUGET_EXE }} restore App1/App1.sln
        
      - name: Setup .NET Core 3.1
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
        
        
      - name: Cache NUnit.Console
        id: nunit-console
        uses: actions/cache@v2
        with:
          path: ./NUnit.ConsoleRunner.${{ env.NUNIT_CONSOLE_VERSION }}
          key: nunit-console-${{ env.NUNIT_CONSOLE_VERSION }}
          
      - name: Download NUnit-Console
        if: steps.nunit-console.outputs.cache-hit != 'true'
        run: mono ${{ env.NUGET_EXE }} install NUnit.Console -Version ${{ env.NUNIT_CONSOLE_VERSION }}
        
      - name: Build iOS bundle
        run: mono '/Applications/Visual Studio.app/Contents/Resources/lib/monodevelop/bin/MSBuild/Current/bin/msbuild.dll' App1/App1/App1.iOS/App1.iOS.csproj /p:Configuration=Debug /p:Platform=iPhoneSimulator /verbosity:normal /t:Rebuild
        
      - name: Build UItest
        run: msbuild App1/UItest/UItest.csproj /p:Configuration=Release
      
      - name: UITest iOS
        run: mono ${{ env.NUNIT_CONSOLE }} App1/UItest/bin/Release/UItest.dll --where "test =~ iOS"

      - uses: actions/upload-artifact@v2.2.1
        with:
          name: iOS-screenshots
          path: App1/UItest/bin/Release/screenshots
