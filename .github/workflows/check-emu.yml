name: Check
on: push
env:
  NUNIT_CONSOLE_VERSION: 3.12.0
  NUGET_EXE: /Library/Frameworks/Mono.framework/Versions/Current/lib/mono/nuget/nuget.exe
  NUNIT_CONSOLE: /Users/runner/work/my_mobile_app/my_mobile_app/NUnit.ConsoleRunner.3.12.0/tools/nunit3-console.exe
jobs: 
  Android:
    runs-on: macos-10.15
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2
        with:
            ref: improved          

      - name: Accept licenses
        run: yes | /Users/runner/Library/Android/sdk/tools/bin/sdkmanager --licenses &
        
      - name: ls
        run: ls /Users/runner/Library/Android/sdk
      
      - name: Download emu
        run: |
          cd /Users/runner/Library/Android/sdk/tools/bin
          ./sdkmanager 'system-images;android-29;default;x86'
          echo "no" | ./avdmanager --verbose create avd create avd -n emulator --package "system-images;android-29;default;x86" --tag default
          cd ..
          cd ..
          emulator/emulator -accel-check
          
      - name: Start emulator
        run: |
          /Users/runner/Library/Android/sdk/platform-tools/adb start-server
          /Users/runner/Library/Android/sdk/emulator/emulator @emulator -no-snapshot-save -noaudio -no-boot-anim &
          
      - name: list avd
        run: emulator -list-avds
        
      - name: list 2
        run: /Users/runner/Library/Android/sdk/tools/emulator -list-avds
        
      - name: what
        run: |
          ls $HOME/.android/avd


      - name: Cache ./nuget/packages
        uses: actions/cache@v2
        with:
          path: | 
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/**/*.csproj') }}-${{ hashFiles('**/**/**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget
            
      - name: Nuget restore
        run: mono ${{ env.NUGET_EXE }} restore App1/App1.sln
        
      - name: Cache NUnit.Console
        id: nunit-console
        uses: actions/cache@v2
        with:
          path: ./NUnit.ConsoleRunner.${{ env.NUNIT_CONSOLE_VERSION }}
          key: nunit-console-${{ env.NUNIT_CONSOLE_VERSION }}
          
      - name: Download NUnit-Console
        if: steps.nunit-console.outputs.cache-hit != 'true'
        run: mono ${{ env.NUGET_EXE }} install NUnit.Console -Version ${{ env.NUNIT_CONSOLE_VERSION }}
        
      - name: Build .Apk
        run: msbuild App1/App1/App1.Android/App1.Android.csproj -target:SignAndroidPackage /p:Configuration=Release /verbosity:normal

      - name: Build UItest
        run: msbuild App1/UItest/UItest.csproj /p:Configuration=Release
    
      - name: Run UItest
        run: | 
          /Users/runner/Library/Android/sdk/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          /Users/runner/Library/Android/sdk/platform-tools/adb -s emulator-5554 shell input keyevent 82
          mono ${{ env.NUNIT_CONSOLE }} App1/UItest/bin/Release/UItest.dll --where "test =~ Android"
        
      - uses: actions/upload-artifact@v2.2.1
        with:
          name: Android-screenshots
          path: App1/UItest/bin/Release/screenshots
