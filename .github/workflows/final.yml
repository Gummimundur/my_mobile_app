name: CI final
on: [push, pull_request]
env:
  NUNIT_CONSOLE_VERSION: 3.12.0
  NUGET_EXE: /Library/Frameworks/Mono.framework/Versions/Current/lib/mono/nuget/nuget.exe
  NUNIT_CONSOLE: /Users/runner/work/my_mobile_app/my_mobile_app/NUnit.ConsoleRunner.3.12.0/tools/nunit3-console.exe
jobs: 
  Build:
    runs-on: macos-10.15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: workspace
        run: |
          echo "$github.workspace"
          pwd
        
      - name: Cache nuget packages 
        id: nuget-packages
        uses: actions/cache@v2
        env:
          cache-name: nuget-cache
        with:
          path: |
            ~/.nuget/packages
            ./App1/App1/App1.iOS/obj/
            ./App1/App1/App1.Android/obj/
            ./App1/App1/App1/obj/
            ./App1/UItest/obj/
          key: ${{ runner.os}}-restore-${{ env.cache-name }}-${{ hashfiles('App1/App1/App1/App1.csproj') }}-${{ hashfiles('App1/App1/App1.Android/App1.Android.csproj') }}-${{ hashfiles('App1/App1/App1.iOS/App1.iOS.csproj') }}-${{ hashfiles('App1/UItest/UItest.csproj') }}
      
      - name: Nuget restore
        if: steps.nuget-packages.outputs.cache-hit != 'true'
        run: mono ${{ env.NUGET_EXE }} restore App1/App1.sln
        
      - name: Cache NUnit.Console
        id: nunit-console
        uses: actions/cache@v2
        with:
          path: ./NUnit.ConsoleRunner.${{ env.NUNIT_CONSOLE_VERSION }}
          key: nunit-console-${{ env.NUNIT_CONSOLE_VERSION }}-${{ github.run_id }}
        
      - name: Download NUnit-Console
        if: steps.nunit-console.outputs.cache-hit != 'true'
        run: mono ${{ env.NUGET_EXE }} install NUnit.Console -Version ${{ env.NUNIT_CONSOLE_VERSION }}
        
      - name: Cache binaries
        id: binaries
        uses: actions/cache@v2
        env:
          key: "${GITHUB_SHA}-${GITHUB_RUN_ID}"
        with:
          path: ./binaries
          key: ${{ github.sha }}-${{ github.run_id }}
      
      - name: Build iOS bundle
        run: msbuild App1/App1/App1.iOS/App1.iOS.csproj /p:Configuration=Release
        
      - name: Build .Apk
        run: msbuild App1/App1/App1.Android/App1.Android.csproj -target:SignAndroidPackage /p:Configuration=Release
      
      - name: Build UItest
        run: msbuild App1/UItest/UItest.csproj /p:Configuration=Release
        
      - name: Create binaries
        run: |
          mkdir binaries
          mv App1/UItest/ binaries
          mv App1/App1/App1.Android/bin/Release/com.companyname.app1.apk binaries
          mv App1/App1/App1.iOS/bin/iPhoneSimulator/Release/App1.iOS.app binaries
          
  Android-UItest:
    runs-on: macos-10.15
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2     
        
      - name: Cache binaries
        id: binaries
        uses: actions/cache@v2
        with:
          path: ./binaries
          key: ${{ github.sha }}-${{ github.run_id }}
        
      - name: Cache NUnit.Console
        id: nunit-console
        uses: actions/cache@v2
        with:
          path: ./NUnit.ConsoleRunner.${{ env.NUNIT_CONSOLE_VERSION }}
          key: nunit-console-${{ env.NUNIT_CONSOLE_VERSION }}-${{ github.run_id }}
  
      - uses: malinskiy/action-android/install-sdk@release/0.1.1
      - run: sdkmanager "platform-tools" "platforms;android-28"
      - run: sdkmanager "build-tools;30.0.2"
        
      - name: Android UItest
        uses: malinskiy/action-android/emulator-run-cmd@release/0.1.1
        with:
            cmd: mono ${{ env.NUNIT_CONSOLE }} binaries/UItest/bin/Release/UItest.dll --where "test =~ Android"
            api: 28
            tag: default
            abi: x86   
            verbose: false
      
      - uses: actions/upload-artifact@v2.2.1
        with:
          name: Android-screenshots
          path: binaries/UItest/bin/Release/screenshots
   
  iOS-UItest:
    runs-on: macos-10.15
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Cache binaries
        id: binaries
        uses: actions/cache@v2
        with:
          path: ./binaries
          key: ${{ github.sha }}-${{ github.run_id }}
          
      - name: Cache NUnit.Console
        id: nunit-console
        uses: actions/cache@v2
        with:
          path: ./NUnit.ConsoleRunner.${{ env.NUNIT_CONSOLE_VERSION }}
          key: nunit-console-${{ env.NUNIT_CONSOLE_VERSION }}-${{ github.run_id }}
      
      - name: UITest iOS
        run: mono ${{ env.NUNIT_CONSOLE }} binaries/UItest/bin/Release/UItest.dll --where "test =~ iOS"

      - uses: actions/upload-artifact@v2.2.1
        with:
          name: iOS-screenshots
          path: binaries/UItest/bin/Release/screenshots
