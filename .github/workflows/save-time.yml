name: Continuous integration with UI tests
on: push
jobs:
  Build:
    runs-on: windows-latest
    needs: Android
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: improved
          
      - name: Nuget restore
        run: nuget restore App1/App1.sln
      
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
    
      - name: Build .Apk
        run: msbuild App1/App1/App1.Android/App1.Android.csproj -target:SignAndroidPackage /p:Configuration=Release /verbosity:normal

      - name: Build UItest
        run: msbuild App1/UItest/UItest.csproj /p:Configuration=Release
        
      - name: Cache .Apk and UItest binaries
        uses: actions/cache@v2
        with:
          path: |
            ./binaries
          key: ${{ github.sha }}-${{ github.run_id }}
          
      - name: Make binaries
        run: |
          mkdir binaries
          mv App1/UItest/bin/Release/UItest.dll binaries
          mv App1/App1/App1.Android/bin/Release/com.companyname.app1.apk binaries
          
  Android:
    runs-on: ubuntu-18.04
    steps:
      - name: Accept licenses
        run: yes | /usr/local/lib/android/sdk/tools/bin/sdkmanager --licenses &
        
      - name: Restore binaries
        uses: actions/cache@v2
        with:
          path: |
            ./binaries
          key: ${{ github.sha}}-${{ github.run_id }}
          
      - name: Download emulator
        run: |
          cd /usr/local/lib/android/sdk/tools/bin
          ./sdkmanager 'system-images;android-29;default;x86'
          ./sdkmanager "emulator"
          echo "no" | ./avdmanager create avd -n emulator --package "system-images;android-29;default;x86" --tag default
     
      - name: list avd
        run: /usr/local/lib/android/sdk/emulator/emulator -list-avds
        
      - name: Start emulator
        run: |
          /usr/local/lib/android/sdk/platform-tools/adb start-server
          /usr/local/lib/android/sdk/emulator/emulator @emulator -no-snapshot-save -noaudio -no-boot-anim &
        
      
      - name: Download KVM
        run: sudo apt-get install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils ia32-libs-multiarch

      - name: Accel check
        run: /usr/local/lib/android/sdk/emulator/emulator -accel-check
      
      - name: Download nuget.exe
        run: wget https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
          
      - name: Download NUnit-Console
        run: mono nuget.exe install NUnit.Console
        
      - name: Run UItest
        run: |
          /usr/local/lib/android/sdk/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'
          /usr/local/lib/android/sdk/platform-tools/adb -s emulator-5554 shell input keyevent 82
          mono nuget.exe binaries/UItest/bin/Release/UItest.dll --where "test =~ Android"
          
        
